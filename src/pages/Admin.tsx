import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import React, { useEffect, useState } from "react";
import { boolean, date } from "zod";
import { saveRouterProps } from "../hooks/routerHooks";
import { api } from "../utils/api";

const Admin: NextPage = () => {
  const [currentPassword, setCurrentPassword] = useState("");
  const [ToFetch, setToFetch] = useState(false);
  const [isAllow, setIsAllow] = useState<{
    state: boolean | any;
    counter: number;
    oldCounter: number;
  }>({
    state: false,
    counter: 0,
    oldCounter: 0,
  });
  const isAdmin = api.example.isAdmin.useQuery({
    password: currentPassword,
    toFetch: ToFetch,
  });
  const b = [true, false];
  if (
    isAdmin.data &&
    b.includes(isAdmin.data.data) &&
    isAdmin.data.data != isAllow.state
  ) {
    setIsAllow({ ...isAllow, state: isAdmin.data.data });
  }
  useEffect(() => {
    if (isAllow.counter != isAllow.oldCounter) {
      setToFetch(true);
      setIsAllow({ ...isAllow, oldCounter: isAllow.counter });
    }

    console.log({ isAdmin, isAllow });
  }, [isAdmin]);

  useEffect(() => {
    if (isAllow.state) {
      console.log({ currentPassword });
      saveRouterProps(null, "/DashBoard");
    }
  }, [isAllow]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        dir="rtl"
        className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]"
      >
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Crypto_<span className="text-[hsl(280,100%,70%)]">Nai</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <div className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20">
              <h3 className="text-2xl font-bold">ממשק ניהול →</h3>
              <div className="text-lg">
                {!currentPassword
                  ? "הכנס סיסמה"
                  : isAllow.counter > 0 && !isAllow.state && currentPassword
                  ? "סיסמה לא תקינה"
                  : isAllow.state
                  ? "סיסמה תקינה"
                  : ""}
              </div>

              <input
                type={"text"}
                placeholder={"הכנס סיסמה"}
                className={"text-black"}
                value={currentPassword}
                onChange={(e) => {
                  setCurrentPassword(e.target.value);
                }}
              />
              <button
                onClick={() => {
                  setIsAllow({
                    ...isAllow,
                    counter: isAllow.counter + 1,
                  });

                  console.log({ isAllow });
                }}
                className="border-2 border-pink-100"
              >
                כנס
              </button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Admin;

export const useIsAdmin = (
  toFetch: boolean,
  isAllow: any,
  setIsAllow: any,
  password: string
) => {
  console.log({ toFetch, isAllow });

  if (toFetch) {
    setIsAllow({
      ...isAllow,
      counter: 0,
      oldCounter: 0,
    });
    return;
  }
};
